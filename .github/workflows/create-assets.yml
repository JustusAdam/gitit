name: Create Assets

on:
  release:
    types: [published]

env:
  PROGRAM: gitit
  EXTRA_ASSETS: plugins data LICENSE YUI-LICENSE
  PROXY: unix-proxy.sh
  HIDDEN_BIN: gitit-bin

jobs:
  create-assets:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Build the project
      run: stack build --ghc-options=-rtsopts

      # This also renames the program name and instead injects a proxy shell
      # script that takes care of overriding the cabal inserted paths before
      # running the actual program
    - name: Tar and strip the binary
      run: |
        export DIR=$PROGRAM
        mv `stack exec -- which $PROGRAM` $HIDDEN_BIN
        mkdir $DIR
        mv $PROXY $DIR/$PROGRAM
        mv $HIDDEN_BIN $EXTRA_ASSETS $DIR
        tar -cavf $DIR.tar.gz $DIR

    - name: Upload assets
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./gitit.tar.gz
        asset_name: gitit-${{ runner.os }}.tar.gz
        asset_content_type: application/tar.gz
